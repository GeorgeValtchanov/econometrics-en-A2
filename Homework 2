# Homework 2
# Problem 1
# Install the following packages if necessary. Uncomment the following line and execute it.
#install.packages(c('dplyr', 'ggplot2'))
# Load the packages
library(dplyr)
library(ggplot2)
# Download and read the data
wines <- read.csv(file='https://s3.eu-central-1.amazonaws.com/sf-timeseries/data/wine.csv')

## a)
wines <- within(wines, {
  Price <- exp(LogPrice)
})
## b)
hotorcold <- ifelse(wines$Temperature > mean(wines$Temperature), "hot", "cold")
# Example using ifelse
ifelse(c(TRUE, TRUE, FALSE, TRUE), 'condition TRUE', 'condition FALSE')

## c)
table(hotorcold)
# Example using table
table(c('category1', 'category1', 'category2'))

## d)
wines <- within.data.frame(wines,{
  hotorcold=hotorcold
})
groupedPrice <- group_by(wines, hotorcold)
summarisedPrice <- summarise(
  groupedPrice, 
  meanPrice = mean(Price),
  sdPrice = sd(Price),
  minPrice = min(Price),
  maxPrice = max(Price),
  medianPrice = median(Price)
)
## e)
ggplot(
  data = wines,
  aes(y = Price, x = hotorcold)
) + geom_boxplot() + xlab("Type of year") + ylab("Price") + coord_flip() + geom_point(y = wines$Price)

## f)
ggplot(
  data = wines,
  aes(sample = Price)
) + stat_qq()
#Because the points are not in a straight line , we know that the distribution of prices does not follow a normal distribution.
  
## g)
summarisedPriceCI <- within(summarisedPrice, {
  lowerCIlimit <- meanPrice - sdPrice * qnorm(0.95) / sqrt(27)
  upperCIlimit <- meanPrice + sdPrice * qnorm(0.95) / sqrt(27)
})
summarisedPriceCI

# Homework 2
# Problem 2
# Install the following packages if necessary
# install.packages(c('ggplot2', 'dplyr'))

library(dplyr)
library(ggplot2)

# Enter your student ID in set.seed() so that your results are reproducible

set.seed()

# use the rnorm function to generate values from the standard normal distribution
# you can compute e^x with the exp function, e.g. e^2 = exp(2).
mu <- 1
sigma <- 1.3

## a)

mux <- exp((mu) + sigma^2/2)
varx <- (exp(sigma^2) - 1) * exp(2*mu + sigma^2)

## b)
B <- 5000
n <- 1000
z <- rnorm(B * n)
x <- exp(mu + sigma * z)

sampleB <- sample(x, size = n*B, replace = TRUE)

##c)
samplesData <- data.frame(
  minutes = sampleB, 
  r = rep(1:B, each = n)
)

groupedSamples <- group_by(samplesData, r)

sampleMeansbySample <- summarise(
  groupedSamples,
  sampleMean = mean(minutes)
)

## d)

ggplot(data = sampleMeansbySample, aes(x = sampleMean)) + 
  geom_histogram(bins=50) + geom_vline(xintercept = mean(x), color = 'orange1')

## The distribution resembles a normal distribution. It isn't skewed. It's centered around the
## mean value.

## e)
mean(sampleMeansbySample$sampleMean)
sd(sampleMeansbySample$sampleMean)

